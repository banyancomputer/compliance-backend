# ec2-setup.yml:
- become: yes
  hosts: all
  name: Setup and
  tasks:
    - name: Update Yum
      yum:
        name: '*'
        state: latest
        update_cache: yes
      register: yum_update
    - name: Install Docker
      yum:
        name: docker
        state: present
      register: docker_install
    - name: Start Docker
      service:
        name: docker
        state: started
      register: docker_start
    - name: Add User to Docker Group
      user:
        name: ec2-user
        groups: docker
        append: yes
      register: docker_user
    - name: Install Python Docker
      pip:
        name: docker
        state: present
    - name: Get ECR Login
      shell: aws ecr get-login-password --region {{ aws_region }} | docker login --username AWS --password-stdin {{ aws_account_id }}.dkr.ecr.{{ aws_region }}.amazonaws.com
      register: ecr_login
    - name: Pull Estuary from ECR
      community.docker.docker_image:
        name: "{{ aws_account_id }}.dkr.ecr.{{ aws_region }}.amazonaws.com/{{ app }}-ecr:{{ app_version }}"
        source: pull
    - name: Make a Docker Volume for the App
      docker_volume:
        name: "{{ app }}-volume"
        state: present
        timeout: 300
      register: "app_volume_create"
    - name: Run App Container
      docker_container:
        name: compliance-django
        image: "{{ aws_account_id }}.dkr.ecr.{{ aws_region }}.amazonaws.com/{{ app }}-ecr:{{ app_version }}"
        state: started
        restart_policy: always
        env:
          DEBUG: "1"
          SECRET_KEY: "{{ django_secret_key }}"
          DJANGO_ALLOWED_HOSTS: "{{ django_allowed_hosts }}"
          SQL_ENGINE: "{{ django_sql_engine }}"
          SQL_DATABASE: "{{ django_sql_database }}"
          SQL_USER: "{{ django_sql_user }}"
          SQL_PASSWORD: "{{ django_sql_password }}"
          SQL_HOST: "{{ django_sql_host }}"
          SQL_PORT: "{{ django_sql_port }}"
          DATABASE: "{{ django_database_type }}"
        ports:
          - 8000:80
        volumes:
          - "{{ app }}-volume:/usr/src/app/"
        command: [ "./entrypoint.sh" ]
      register: "app_container_run"

